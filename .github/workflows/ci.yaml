# Starting from https://eddelbuettel.github.io/r-ci/ and adapted
# R package specific parts for build and test commented out, cmake added, deps adjusted

name: ci

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  _R_CHECK_FORCE_SUGGESTS_: "false"

jobs:
  ci:
    strategy:
      matrix:
        include:
          #- {os: macOS-latest}
          - {os: ubuntu-latest}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Setup
        uses: eddelbuettel/github-actions/r-ci-setup@master

      - name: Bootstrap
        run: ./run.sh bootstrap

      - name: Dependencies
        run: Rscript -e 'install.packages(c("roxygen2", "Rcpp", "RcppArmadillo", "RcppEnsmallen", "testthat", "pkgbuild"))'

      - name: Get CMake
        uses: lukka/get-cmake@latest

      - name: Get CCache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}
          variant: sccache

      - name: Prepare R for Ccache (gcc/g++)
        run: mkdir -p ~/.config/ccache ~/.R && echo "sloppiness = include_file_ctime" >> ~/.config/ccache/ccache.conf \
               && echo "hash_dir = false" >> ~/.config/ccache/ccache.conf && echo "CC=sccache gcc" > ~/.R/Makevars \
               && echo "CXX=sccache g++" >> ~/.R/Makevars && echo "CXX17=sccache g++" >> ~/.R/Makevars \
               && echo "SHLIB_CXXLD=sccache g++" >> ~/.R/Makevars
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Prepare R for Ccache (clang/clang++)
        run: mkdir -p ~/.config/ccache ~/.R && echo "sloppiness = include_file_ctime" >> ~/.config/ccache/ccache.conf \
               && echo "hash_dir = false" >> ~/.config/ccache/ccache.conf && echo "CC=sccache clang" > ~/.R/Makevars \
               && echo "CXX=sccache clang++" >> ~/.R/Makevars && echo "CXX17=sccache clang++" >> ~/.R/Makevars \
               && echo "SHLIB_CXXLD=sccache clang++" >> ~/.R/Makevars
        if: ${{ matrix.os == 'macOS-latest' }}

      #- name: CCache config check
      #  run: ccache -p
        
      #- name: Blow away build
      #  run: rm -rf build/
          
      - name: Call CMake
        run: cmake -S . -B build -DDEBUG=OFF -DPROFILE=OFF -DBUILD_CLI_EXECUTABLES=OFF -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=ON -DDOWNLOAD_DEPENDENCIES=ON -DBUILD_TESTS=OFF -DCEREAL_INCLUDE_DIR=../cereal-1.3.2/include       
        
      - name: Build
        run: cd build && VERBOSE=1 make -j $(nproc) R 

      #- name: Install R package 
      #  run: cd build && R CMD INSTALL ./src/mlpack/bindings/R/mlpack_*.tar.gz
        
      #- name: Test
      #  run: ./run.sh run_tests

      #- name: Coverage
      #  if: ${{ matrix.os == 'ubuntu-latest' }}
      #  run: ./run.sh coverage
