# Azure pipeline with ccache use

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - name: CCACHE_DIR
    value: /home/vsts/.ccache

steps:
  # Checkout repository itself
  - checkout: self
    clean: true
    fetchDepth: 1
    workingDirectory: $(Build.SourcesDirectory)

  # Prepare ccache
  - script: |
        sudo apt update
        sudo apt install -y ccache
        export PATH="/usr/lib/ccache:$PATH"
        ccache -z # Reset ccache stats
      displayName: "Install and configure ccache"

  # Restore cache
  - task: Cache@2
    inputs:
      key: 'ccache | "$(Agent.OS)" | **/*.cpp, **/*.h'
      path: $(CCACHE_DIR)
      cacheHitVar: CACHE_RESTORED
    displayName: "Cache ccache directory"

  # Install build depencies (TODO: Cache these too ? Use `apt` for Armadillo)
  - script: |
      # Workaround to avoid a build failure, because we run out of memory.
      free -h
      df -h
      sudo dd if=/dev/zero of=/usr/swapfile.img bs=1024 count=12M
      sudo mkswap /usr/swapfile.img
      sudo swapon /usr/swapfile.img
      free -h
      df -h

      #git clone --depth 1 https://github.com/mlpack/jenkins-conf.git conf

      sudo apt-get install -y --allow-unauthenticated libopenblas-dev g++ xz-utils

      # Install armadillo.
      curl -k -L https://sourceforge.net/projects/arma/files/armadillo-10.8.2.tar.xz | tar -xvJ && \
          cd armadillo* && \
          cmake . && \
          make && \
          sudo make install && \
          cd ..

      # Install ensmallen.
      wget https://ensmallen.org/files/ensmallen-latest.tar.gz
          tar -xvzpf ensmallen-latest.tar.gz # Unpack into ensmallen-*/.
          cd ensmallen-*/ && \
          sudo cp -vr include/* /usr/include/ && \
          cd ..

      # Install STB.
      wget https://mlpack.org/files/stb.tar.gz
          tar -xvzpf stb.tar.gz # Unpack into stb/.
          cd stb &&\
          sudo cp -vr include/* /usr/include/ && \
          cd ..

      # Install cereal.
      wget https://github.com/USCiLab/cereal/archive/v1.3.0.tar.gz
          tar -xvzpf v1.3.0.tar.gz # Unpack into cereal-1.3.0/.
          cd cereal-1.3.0 && \
          sudo cp -vr include/cereal /usr/include/ && \
          cd ..

    displayName: 'Install Build Dependencies'

  # Configure mlpack (CMake)
  - script: |
      mkdir build && cd build
      cmake -DDEBUG=OFF -DPROFILE=OFF -DBUILD_TESTS=OFF -DBUILD_PYTHON_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_GO_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF -DUSE_PRECOMPILED_HEADERS=OFF -DCEREAL_INCLUDE_DIR=/usr/include/ ..
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'CMake'

  # Build mlpack
  - script: cd build && make -j2
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Build'
